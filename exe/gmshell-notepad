#!/usr/bin/env ruby
require File.expand_path('../../lib/gmshell/journal_entry', __FILE__)
require 'optparse'
config = {
  timestamp: false,
  io: $stdout,
  logger: $stderr
}

command_name = File.basename(__FILE__)

OptionParser.new do |options|
  # This banner is the first line of your help documentation.
  options.set_banner "Usage: #{command_name} [options] [files]\n" \
    "Capture session notes and write to a file on close.\n\n" \
    "Examples:\n" \
    "\t$ #{command_name}\n" \
    "\t$ #{command_name} rolls.txt\n"
    "\t$ echo '2d6' | #{command_name}"

  # Separator just adds a new line with the specified text.
  options.separator ""
  options.separator "Specific options:"

  options.on("-t", "--timestamp", "Append a timestamp to the note") do |timestamp|
    config[:timestamp] = timestamp
  end

  options.on_tail("-h", "--help", "You're looking at it!") do
    $stderr.puts options
    exit 1
  end
end.parse!

@journal_entry = Gmshell::JournalEntry.new(**config)

begin
  # Keep reading lines of input as long as they're coming.
  while input = ARGF.gets
    input.each_line do |line|
      begin
        @journal_entry.write(line: line)
      rescue Errno::EPIPE
        # sysexits(3) specifies that exit code 74 represent an IO error,
        # which is the likely situation
        @journal_entry.dump!
        exit(74)
      end
    end
  end
ensure
  @journal_entry.dump!
end
